import pytest
import numpy as np

import dask.array as da
from dask.array.utils import assert_eq

a = np.array(
    [
        [
            [
                [
                    [0.07834176802191717, 0.6798094156470524, 0.08235527231132211],
                    [0.9045846609176634, 0.6615854219915648, 0.21295665158391885],
                    [0.5158102688394821, 0.3039053911390963, 0.09639876861245422],
                    [0.5624363137219578, 0.28006823070411024, 0.911319206958469],
                ],
                [
                    [0.07372178753581171, 0.7087630992190868, 0.07370527421023443],
                    [0.5037560082227376, 0.8172837543945191, 0.4086510706419727],
                    [0.5792167727637104, 0.7906440904410871, 0.01388160252616688],
                    [0.7517627623632268, 0.03634502642399107, 0.3572188347991909],
                ],
            ],
            [
                [
                    [0.9054473469807452, 0.5022110832371617, 0.3186087054993222],
                    [0.24047980068306574, 0.8984322946092286, 0.09107928843341684],
                    [0.8530524461470526, 0.3560862744703124, 0.7851533205835345],
                    [0.5814727928428571, 0.9119489092478106, 0.2195364407384065],
                ],
                [
                    [0.828048726832081, 0.43218433104941323, 0.506441395551075],
                    [0.32715712663085295, 0.08207407522312238, 0.4675781330095192],
                    [0.513992067626272, 0.4450704097497289, 0.13675920873497316],
                    [0.3080145475428757, 0.5289959309758631, 0.9815958499064111],
                ],
            ],
            [
                [
                    [0.35131464855387984, 0.05576818777324133, 0.46630746885247365],
                    [0.18400543980979567, 0.5768834381141361, 0.5959015773375581],
                    [0.19078533559410393, 0.3158645905420213, 0.9693136236479256],
                    [0.16666152961089387, 0.13035150849348254, 0.725476564383462],
                ],
                [
                    [0.5448718749341154, 0.15068378162721197, 0.522983939733467],
                    [0.033011504482868936, 0.9157694840587323, 0.3598074788559691],
                    [0.08853586457229512, 0.6042247671283045, 0.28279190556035594],
                    [0.6999855796899876, 0.2651773614023686, 0.8424341493485171],
                ],
            ],
            [
                [
                    [0.5919720413860727, 0.13300724968041888, 0.9173726253248404],
                    [0.7070843578058729, 0.1399635191505515, 0.45732254520893845],
                    [0.2022914257846805, 0.8176783042296071, 0.6939177508134967],
                    [0.6516847418549672, 0.10003861515806445, 0.0668692828509182],
                ],
                [
                    [0.12206248605785841, 0.7422983871395363, 0.21139910305413967],
                    [0.16564487610930956, 0.25165207029016445, 0.3574132977335659],
                    [0.0022887197680512283, 0.42519130939819794, 0.697920101077034],
                    [0.09473926676618116, 0.9140888951540661, 0.4240217405344009],
                ],
            ],
            [
                [
                    [0.5429962701715475, 0.7877228292598992, 0.1288256871535508],
                    [0.6168750943615968, 0.32915848880302834, 0.8794847593005947],
                    [0.0639590078409239, 0.6885280717033144, 0.2948408951920809],
                    [0.15746920747524495, 0.6931745052719334, 0.5189689909132187],
                ],
                [
                    [0.18820454490850136, 0.9975065327545852, 0.4339649299259998],
                    [0.46713481033349225, 0.9883468239720212, 0.9551578788018696],
                    [0.7491203557162802, 0.13365549339867766, 0.4487966063889459],
                    [0.07699665129864153, 0.3540114800466908, 0.257362750995754],
                ],
            ],
        ],
        [
            [
                [
                    [0.9999884950874441, 0.975842828998354, 0.9385227716933049],
                    [0.5087984560855606, 0.9204572735863752, 0.09337621824257869],
                    [0.5400077047047074, 0.4590205324868264, 0.9786762235694382],
                    [0.7650472214551102, 0.8961005808336594, 0.07337646089921845],
                ],
                [
                    [0.29793363796778916, 0.6755292381924859, 0.6777883472885713],
                    [0.5285984995870301, 0.1312172335607691, 0.5884487257466843],
                    [0.21361349227944704, 0.2146935859790985, 0.3832235610542286],
                    [0.6300974264314535, 0.6008794467251761, 0.9749579659874156],
                ],
            ],
            [
                [
                    [0.3990978500509874, 0.5122595389419494, 0.8408218452569759],
                    [
                        0.26902857553193993,
                        0.0012674177970567468,
                        0.5766055195696306,
                    ],
                    [0.8904955676450634, 0.2425007303192388, 0.22609069796143377],
                    [0.6576690181717829, 0.017748253431228544, 0.11042136322963247],
                ],
                [
                    [0.12715644078292565, 0.41756005044120315, 0.7158100535918777],
                    [0.35426352021166985, 0.969088486334311, 0.2605306316486383],
                    [0.20579139719033912, 0.9613199148872663, 0.28106941474036284],
                    [0.7796383103768083, 0.4681908179473806, 0.8943972264025075],
                ],
            ],
            [
                [
                    [0.17498864732990704, 0.7325175664643911, 0.38313592501650906],
                    [0.5332246817385723, 0.481866968200492, 0.8804520804288529],
                    [0.39698354994646046, 0.6102224752297734, 0.9855875672809569],
                    [0.6676692885588135, 0.3989715938071169, 0.05319910830719754],
                ],
                [
                    [0.38490096664524676, 0.6317013512654432, 0.8573988757425679],
                    [0.7807697214732698, 0.9661057615488388, 0.09405847418132762],
                    [0.4729307887027776, 0.8522581858000347, 0.7474679741043878],
                    [0.7414565618211212, 0.5628974796978025, 0.24893879856295686],
                ],
            ],
            [
                [
                    [0.40930825035245433, 0.20960241265600899, 0.8143137554031931],
                    [0.6047425147040438, 0.3568483766113679, 0.756227883209106],
                    [0.1176097973741691, 0.4159074698630949, 0.3095319140152619],
                    [0.19829272272967946, 0.4693663968068671, 0.6463433770454545],
                ],
                [
                    [0.14829299968416665, 0.888422263767298, 0.7996546497274534],
                    [0.8119367414423523, 0.4371824306524057, 0.46242090162419147],
                    [0.42584048504701033, 0.2206105685163794, 0.5855737688664663],
                    [0.6962345028163262, 0.41464378161502546, 0.6676378536661034],
                ],
            ],
            [
                [
                    [0.5079423540491024, 0.4267936142520382, 0.3313183817358777],
                    [0.4635879112541389, 0.5463223557497617, 0.3355918500224012],
                    [0.2963581124192598, 0.6076027451960558, 0.16191483927967398],
                    [0.7405301889877302, 0.6556972471830984, 0.8292377343353741],
                ],
                [
                    [0.2071419038798954, 0.04791959366936438, 0.06744195293743316],
                    [0.8793384809234597, 0.1659526182977955, 0.46964349700337626],
                    [0.5483486225842585, 0.3164560646872151, 0.1800831490433018],
                    [0.7652287659240603, 0.5935323405105503, 0.3433806190926971],
                ],
            ],
        ],
    ]
)


@pytest.mark.parametrize("secondaxis", list(range(5)))
@pytest.mark.parametrize("firstaxis", list(range(5)))
@pytest.mark.parametrize("run", list(range(20)))
@pytest.mark.parametrize("scheduler", ["sync", "threads"])
def test1(scheduler, run, firstaxis, secondaxis):
    d = da.from_array(a, chunks=(2, 2, 2, 2, 2))
    if firstaxis != secondaxis:
        axis = (firstaxis, secondaxis)
    else:
        axis = firstaxis
    a_r = np.linalg.norm(a, ord=-1, axis=axis, keepdims=True)
    d_r = da.linalg.norm(d, ord=-1, axis=axis, keepdims=True)
    d_r.compute(scheduler=scheduler)
