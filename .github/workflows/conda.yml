name: Conda build
on:
  push:
    branches:
      - main
  pull_request:

# When this workflow is queued, automatically cancel any previous running
# or pending jobs from the same branch
concurrency:
  group: conda-${{ github.head_ref }}
  cancel-in-progress: true

# Required shell entrypoint to have properly activated conda environments
defaults:
  run:
    shell: bash -l {0}

jobs:
  conda:
    name: Build (and upload)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: dask
          fetch-depth: 0
      - uses: actions/checkout@v2
        with:
          repository: dask/distributed
          path: distributed
          fetch-depth: 0
      - name: Set up Python
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          use-mamba: true
          python-version: 3.8
      - name: Install dependencies
        run: |
          mamba install boa conda-verify

          which python
          pip list
          mamba list
      - name: Build conda packages
        run: |
          # suffix for nightly package versions
          export VERSION_SUFFIX=a`date +%y%m%d`

          # compute dask-core pre-release version / build
          IFS='-' read -r -a arr <<< `git -C dask describe --tags`
          export DASK_VERSION=${arr[0]}$VERSION_SUFFIX
          export DASK_BUILD=py_${arr[2]}_${arr[1]}

          # dask-core pre-release build
          conda mambabuild dask/continuous_integration/recipe \
                           --no-anaconda-upload \
                           --output-folder build

          # distributed pre-release build
          conda mambabuild distributed/continuous_integration/recipes/distributed \
                           --no-anaconda-upload \
                           --output-folder build

          # dask pre-release build
          conda mambabuild distributed/continuous_integration/recipes/dask \
                           --no-anaconda-upload \
                           --output-folder build
      - name: Upload conda package
        if: |
          github.event_name == 'push'
          && github.ref == 'refs/heads/main'
          && github.repository == 'dask/dask'
        env:
          ANACONDA_API_TOKEN: ${{ secrets.DASK_CONDA_TOKEN }}
        run: |
          # convert distributed to other architectures
          cd build && conda convert linux-64/*.tar.bz2 -p osx-64 \
                                                       -p osx-arm64 \
                                                       -p linux-ppc64le \
                                                       -p linux-aarch64 \
                                                       -p win-64

          # install anaconda for upload
          mamba install anaconda-client

          anaconda upload --label dev noarch/*.tar.bz2
          anaconda upload --label dev linux-64/*.tar.bz2
          anaconda upload --label dev linux-aarch64/*.tar.bz2
          anaconda upload --label dev linux-ppc64le/*.tar.bz2
          anaconda upload --label dev osx-64/*.tar.bz2
          anaconda upload --label dev osx-arm64/*.tar.bz2
          anaconda upload --label dev win-64/*.tar.bz2
